Context free grammar representation:

expression -> literal | unary | binary | grouping;
literal -> NUMBER | STRING | "true" | "false" | "null";
grouping -> "(" expression ")";
unary -> ( "-" | "!" ) expression;
binary -> expression operator expression;
operator -> "==" | "!=" | "<" | "<=" | ">" | ">=" | "+" | "-" | "*" | "/";

Grammar representation with basic precedence implemented:

expression -> equality;
equality -> comparison ( ( "!=" | "==" ) comparison )*;
comparison -> term ( ( ">" | ">=" | "<" | "<=" ) term )*;
term -> factor ( ( "-" | "+" ) factor )*;
factor -> unary ( ( "/" | "*" ) unary )*;
unary -> ( "!" | "-" ) unary | primary;
primary -> NUMBER | STRING | "true" | "false" | "null" | "(" expression ")";